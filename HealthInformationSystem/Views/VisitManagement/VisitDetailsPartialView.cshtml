@using HealthInformationProgram.Models.ViewModels.Common
@model HealthInformationProgram.Models.ViewModels.VisitManagementViewModel
@Styles.Render("~/Content/css")
@Styles.Render("~/Content/themes/base/css")
<style type="text/css">
    .ui-datepicker {
    background-color:white !important;}
</style>
<div class="body searchCriteria">

    <fieldset class="scheduler-border">

        @if (Model.ModelState == HIPViewModelStates.AddNewOfficeVisit)
        {
            <legend class="legend-border">Add New Office Visit</legend>
        }
        else if(Model.ModelState == HIPViewModelStates.EditOfficeVisit)
        {
            <legend class="legend-border">Edit Office Visit</legend>
        }
        else
        {
            <legend class="legend-border">Office Visit Details</legend>
        }

        @if (((Model.ModelState == HIPViewModelStates.FindVisit) && (Model.VisitSearchResult != null)) ||
                    (Model.ModelState == HIPViewModelStates.EditOfficeVisit) ||
                    (Model.ModelState == HIPViewModelStates.AddNewOfficeVisit) ||
                    (Model.ModelState == HIPViewModelStates.EditOfficeVisitDiagnosis) ||
                    (Model.ModelState == HIPViewModelStates.AddNewOfficeVisitDiagnosis))
        {
            @Html.HiddenFor(model => model.VisitSearchResult.RevisitId)
            @Html.HiddenFor(model => model.VisitSearchResult.RevisitName)
            @Html.HiddenFor(model => model.VisitSearchResult.FacilityHardwareId)
            @Html.HiddenFor(model => model.VisitSearchResult.BeneficiaryId)
            @Html.HiddenFor(model => model.VisitSearchResult.BeneficiaryName)
            @Html.HiddenFor(model => model.VisitSearchResult.GenderId)
            @Html.HiddenFor(model => model.VisitSearchResult.FacilityId)
            @Html.HiddenFor(model => model.VisitSearchResult.OfficeVisitId)
            @Html.HiddenFor(model => model.VisitSearchResult.CreateDate)
            @Html.HiddenFor(model => model.VisitSearchResult.CreatedBy)

            if ((Model.ModelState != HIPViewModelStates.EditOfficeVisit) &&
                                    (Model.ModelState != HIPViewModelStates.AddNewOfficeVisit))
            {
                <table style="margin-top:10px;">
                    <tr>
                        <td class="rightJustifiedLabelTableCell">
                            <div class="editor-label">
                                @Html.LabelFor(model => model.VisitSearchResult.OfficeVisitId)
                            </div>
                        </td>
                        <td>
                            @Html.HiddenFor(model => model.VisitSearchResult.OfficeVisitId)
                            @Html.DisplayFor(model => model.VisitSearchResult.OfficeVisitId, null)
                        </td>
                    </tr>
                </table>
            }

            <table>
                <tr>
                    <td class="rightJustifiedLabelTableCell">
                        <div class="editor-label">
                            @if ((Model.ModelState == HIPViewModelStates.EditOfficeVisit) ||
        (Model.ModelState == HIPViewModelStates.AddNewOfficeVisit))
                            {
                                @Html.LabelFor(model => model.AddNewEditOfficeVisit.FacililtyName)
                            }
                            else
                            {
                                @Html.LabelFor(model => model.VisitSearchResult.FacililtyName)
                            }
                        </div>
                    </td>
                    <td>
                        @if ((Model.ModelState == HIPViewModelStates.EditOfficeVisit) ||
    (Model.ModelState == HIPViewModelStates.AddNewOfficeVisit))
                        {
                            @Html.DropDownListFor(model => model.AddNewEditOfficeVisit.FacilityId, new SelectList(Model.SettlementandHealthCentresAsSelectListItems(), "Value", "Text", Model.AddNewEditOfficeVisit.FacilityId), new { style = "width:150px", id = "facilityDropDownBox" })
                            @Html.ValidationMessageFor(model => model.AddNewEditOfficeVisit.FacilityId)
                        }
                        else
                        {
                            @Html.DisplayFor(model => model.VisitSearchResult.FacililtyName)
                        }
                    </td>

                    <td class="rightJustifiedLabelTableCell">
                        <div class="editor-label">
                            @if ((Model.ModelState == HIPViewModelStates.EditOfficeVisit) ||
(Model.ModelState == HIPViewModelStates.AddNewOfficeVisit))
                            {
                                @Html.LabelFor(model => model.AddNewEditOfficeVisit.StaffMemberName)
                            }
                            else
                            {
                                @Html.LabelFor(model => model.VisitSearchResult.StaffMemberName)
                            }
                        </div>
                    </td>
                    <td>
                        @if ((Model.ModelState == HIPViewModelStates.EditOfficeVisit) ||
    (Model.ModelState == HIPViewModelStates.AddNewOfficeVisit))
                        {
                            @Html.TextBoxFor(model => model.AddNewEditOfficeVisit.StaffMemberName)
                            @Html.ValidationMessageFor(model => model.AddNewEditOfficeVisit.StaffMemberName)
                        }
                        else
                        {
                            @Html.DisplayFor(model => model.VisitSearchResult.StaffMemberName)
                        }
                    </td>


                </tr>
                <tr>
                    <td class="rightJustifiedLabelTableCell">
                        <div class="editor-label">
                            @if ((Model.ModelState == HIPViewModelStates.EditOfficeVisit) ||
        (Model.ModelState == HIPViewModelStates.AddNewOfficeVisit))
                            {
                                @Html.LabelFor(model => model.AddNewEditOfficeVisit.OpdId)
                            }
                            else
                            {
                                @Html.LabelFor(model => model.VisitSearchResult.OpdId)
                            }
                        </div>
                    </td>
                    <td>

                        @if ((Model.ModelState == HIPViewModelStates.EditOfficeVisit) ||
                    (Model.ModelState == HIPViewModelStates.AddNewOfficeVisit))
                        {
                            @Html.TextBoxFor(model => model.AddNewEditOfficeVisit.OpdId)
                            @Html.ValidationMessageFor(model => model.AddNewEditOfficeVisit.OpdId)
                        }
                        else
                        {
                            @Html.DisplayFor(model => model.VisitSearchResult.OpdId)
                        }
                    </td>

                    <td class="rightJustifiedLabelTableCell">
                        <div class="editor-label">
                            @if ((Model.ModelState == HIPViewModelStates.EditOfficeVisit) ||
                    (Model.ModelState == HIPViewModelStates.AddNewOfficeVisit))
                            {
                                @Html.LabelFor(model => model.AddNewEditOfficeVisit.VisitDate)
                            }
                            else
                            {
                                @Html.LabelFor(model => model.VisitSearchResult.VisitDate)
                            }
                        </div>
                    </td>
                    <td>
                        @if ((Model.ModelState == HIPViewModelStates.EditOfficeVisit) ||
                    (Model.ModelState == HIPViewModelStates.AddNewOfficeVisit))
                        {
                            @Html.TextBoxFor(model => model.AddNewEditOfficeVisit.VisitDate, "{0:MM/dd/yyyy}", new { @class = "date-picker" })
                            @Html.ValidationMessageFor(model => model.AddNewEditOfficeVisit.VisitDate)
                        }
                        else
                        {
                            @Html.DisplayFor(model => model.VisitSearchResult.VisitDate)
                        }
                    </td>
                </tr>

                <tr>
                    <td class="rightJustifiedLabelTableCell">
                        <div class="editor-label">
                            @if ((Model.ModelState == HIPViewModelStates.EditOfficeVisit) ||
                (Model.ModelState == HIPViewModelStates.AddNewOfficeVisit))
                            {
                                @Html.LabelFor(model => model.AddNewEditOfficeVisit.GenderName)
                            }
                            else
                            {
                                @Html.LabelFor(model => model.VisitSearchResult.GenderName)
                            }
                        </div>
                    </td>
                    <td>
                        @if ((Model.ModelState == HIPViewModelStates.EditOfficeVisit) ||
            (Model.ModelState == HIPViewModelStates.AddNewOfficeVisit))
                        {
                            @Html.DropDownListFor(model => model.AddNewEditOfficeVisit.GenderId, new SelectList(Model.GendersAsSelectListItems(), "Value", "Text", Model.AddNewEditOfficeVisit.GenderId), new { style = "width:150px", id = "genderDropDownBox" })
                            @Html.ValidationMessageFor(model => model.AddNewEditOfficeVisit.GenderId)
                        }
                        else
                        {
                            @Html.DisplayFor(model => model.VisitSearchResult.GenderName)
                        }
                    </td>

                    <td class="rightJustifiedLabelTableCell">
                        <div class="editor-label">
                            @if ((Model.ModelState == HIPViewModelStates.EditOfficeVisit) ||
                (Model.ModelState == HIPViewModelStates.AddNewOfficeVisit))
                            {
                                @Html.LabelFor(model => model.AddNewEditOfficeVisit.Age, new { @type = "number" })
                            }
                            else
                            {
                                @Html.LabelFor(model => model.VisitSearchResult.Age, new { @type = "number" })
                            }
                        </div><small>Age in years</small>
                    </td>
                    <td>
                        @if ((Model.ModelState == HIPViewModelStates.EditOfficeVisit) ||
                    (Model.ModelState == HIPViewModelStates.AddNewOfficeVisit))
                        {
                            @Html.TextBoxFor(model => model.AddNewEditOfficeVisit.Age, new { @type = "number" })
                            @Html.ValidationMessageFor(model => model.AddNewEditOfficeVisit.Age)
                        }
                        else
                        {
                            @Html.DisplayFor(model => model.VisitSearchResult.Age)
                        }
                    </td>
                </tr>

                <tr>
                    <td class="rightJustifiedLabelTableCell">
                        <div class="editor-label">
                            @if ((Model.ModelState == HIPViewModelStates.EditOfficeVisit) ||
                    (Model.ModelState == HIPViewModelStates.AddNewOfficeVisit))
                            {
                                @Html.LabelFor(model => model.AddNewEditOfficeVisit.BeneficiaryName)
                            }
                            else
                            {
                                @Html.LabelFor(model => model.VisitSearchResult.BeneficiaryName)
                            }
                        </div>
                    </td>
                    <td>
                        @if ((Model.ModelState == HIPViewModelStates.EditOfficeVisit) ||
            (Model.ModelState == HIPViewModelStates.AddNewOfficeVisit))
                        {
                            @Html.DropDownListFor(model => model.AddNewEditOfficeVisit.BeneficiaryId, new SelectList(Model.RefugeeStatusAsSelectListItems(), "Value", "Text", Model.AddNewEditOfficeVisit.BeneficiaryId), new { style = "width:150px", id = "refugeeStatusDropDownBox" })
                            @Html.ValidationMessageFor(model => model.AddNewEditOfficeVisit.BeneficiaryId)
                        }
                        else
                        {
                            @Html.DisplayFor(model => model.VisitSearchResult.BeneficiaryName)
                        }
                    </td>

                    <td class="rightJustifiedLabelTableCell">
                        <div class="editor-label">
                            @if ((Model.ModelState == HIPViewModelStates.EditOfficeVisit) ||
                    (Model.ModelState == HIPViewModelStates.AddNewOfficeVisit))
                            {
                                @Html.LabelFor(model => model.AddNewEditOfficeVisit.RevisitName)
                            }
                            else
                            {
                                @Html.LabelFor(model => model.VisitSearchResult.RevisitName)
                            }
                        </div>
                    </td>
                    <td>
                        @if ((Model.ModelState == HIPViewModelStates.EditOfficeVisit) ||
    (Model.ModelState == HIPViewModelStates.AddNewOfficeVisit))
                        {
                            @Html.DropDownListFor(model => model.AddNewEditOfficeVisit.RevisitId, new SelectList(Model.NewOrRevisitStatusAsSelectListItems(), "Value", "Text", Model.AddNewEditOfficeVisit.RevisitId), new { style = "width:150px", id = "revisitDropDownBox" })
                            @Html.ValidationMessageFor(model => model.AddNewEditOfficeVisit.RevisitId)
                        }
                        else
                        {
                            @Html.DisplayFor(model => model.VisitSearchResult.RevisitName)
                        }
                    </td>
                </tr>

            </table>
        }
        else if (((Model.ModelState == HIPViewModelStates.FindVisit) &&
            (Model.UserActionResponse == HIPUserActionResult.VisitNotFound)))
        {
            <div class="body searchCriteria">
                <div class="alert alert-danger">
                    <p>
                        @string.Format("Could NOT find a visit with the Visit Id of {0}", Model.VisitIdSearchStringFilter)
                    </p>
                </div>
            </div>
        }

        <table class="searchCriteriaTable" style="margin-top:10px;">

            <tr>

                @if ((Model.ModelState == HIPViewModelStates.EditOfficeVisit) |
                (Model.ModelState == HIPViewModelStates.AddNewOfficeVisit))
                {
                    <td style="text-align:left">
                        <button id="SaveEditOfficeVisitButton" type="submit" class="btn btn-primary btn-xs" formnovalidate name="operation" value="SaveEditOfficeVisit">Save</button>
                    </td>
                    <td style="text-align:left">
                        <button id="CancelSaveEditOfficeVisitButton" type="submit" class="btn btn-primary btn-xs" formnovalidate name="operation" value="CancelSaveEditOfficeVisit">Cancel</button>
                    </td>
                }
                else
                {
                    if (((Model.ModelState == HIPViewModelStates.FindVisit) &&
                        (Model.UserActionResponse == HIPUserActionResult.VisitFound)))
                    {
                        <td style="text-align:left">
                            <button id="EditOfficeVisitButton" type="submit" class="btn btn-primary btn-xs" name="operation" value="EditOfficeVisit">Edit Visit</button>
                        </td>
                    }

                    @*if (((Model.ModelState != HIPViewModelStates.EditOfficeVisitDiagnosis) &&
                        (Model.ModelState != HIPViewModelStates.AddNewOfficeVisitDiagnosis)))
                    {
                        <td style="text-align:left">
                            <button id="AddNewOfficeVisitButton" type="submit" class="btn btn-primary btn-xs" name="operation" value="AddNewOfficeVisit">Add New Visit</button>
                        </td>
                    }*@
                }

            </tr>

        </table>

    </fieldset>

</div>

<script type="text/javascript">
    $(function () {
        // This will make every element with the class "date-picker" into a DatePicker element
        $('.date-picker').datepicker();
    })
</script>