@model HealthInformationProgram.Models.DiagnosisModel

@Styles.Render("~/Content/css")
@{
    var statusList = new List<SelectListItem>() { new SelectListItem { Text = "Active", Value = "A" }, new SelectListItem { Text = "Inactive", Value = "I" } };
 
}

<div id="createFormDialog" class="createFormDialog">
    <div id="createHeader">
        <h1>Create Diagnosis</h1>
    </div>
    <div>
        <div class="createForm column left">
            @Html.LabelFor(m => m.DiagnosisDescription)
            @Html.TextBoxFor(m => m.DiagnosisDescription)
            @Html.ValidationMessageFor(m=> m.DiagnosisDescription)
        </div>
        <div>
            @Html.LabelFor(m => m.DiagnosisAbbreviation)
            @Html.TextBoxFor(m => m.DiagnosisAbbreviation)
        </div>
        <div class="createForm column left">
            @Html.LabelFor(m => m.SortOrder)
            @Html.TextBoxFor(m => m.SortOrder)
            @Html.ValidationMessageFor(m=> m.SortOrder)

        </div>
        <div>
            @Html.LabelFor(m => m.IcdCode)<small>(10 character limit)</small><br />
            @Html.TextBoxFor(m => m.IcdCode, new { maxlength = 10 })
        </div>
    </div>
    <div>
        <div class="createForm column left">
            @Html.LabelFor(m => m.DiagnosisEffectiveStartDate)
            @Html.TextBoxFor(m => m.DiagnosisEffectiveStartDate)
            @Html.ValidationMessageFor(m=> m.DiagnosisEffectiveStartDate)
        </div>
        <div>
            @Html.LabelFor(m => m.DiagnosisEffectiveEndDate)
            @Html.TextBoxFor(m => m.DiagnosisEffectiveEndDate)
            @Html.ValidationMessageFor(m=> m.DiagnosisEffectiveEndDate)
        </div>

        <div>
            @Html.LabelFor(m => m.DiagnosisStatus)
            @Html.DropDownListFor(m => m.DiagnosisStatus, statusList)

        </div>
       
    </div>
    <div>
    </div>

    <div class="createFooter">
        <div id="buttonWrapper">
            <button id="save" value="SaveDiagnosis" onclick="save()" >Save</button>
            <button id="close">Close</button>
        </div>
    </div>
</div>
    
<script>


    DiagnosisObject = {
        objectModel: function () {
            return result = {
                DiagnosisDescription: $("#DiagnosisDescription").val(),
                DiagnosisAbbreviation: $("#DiagnosisAbbreviation").val(),
                DiagnosisEffectiveStartDate: $("#DiagnosisEffectiveStartDate").val(),
                DiagnosisEffectiveEndDate: $("#DiagnosisEffectiveEndDate").val(),
                DiagnosisStatus: $("#DiagnosisStatus").val(),
                SortOrder: $("#SortOrder").val(),
                IcdCode: $("#IcdCode").val(),
            };
        },
        create: function (inputData) {
           
            debugger;

            $.ajax({

                url: "/DataManagement/SaveDiagnosis",
                data: JSON.stringify(inputData),
                type: 'POST',
                dataType: 'json',
                contentType: "application/json",
                success: function (mydata) {
                    if (mydata.rowsEffected === 1) {
                        window.parent.$('.createWrapper').hide();
                        //window.parent.dialog.dialog("close")
                        window.parent.getTable(window.parent.currentEntity);
                        
                        
                    } else {
                        console.log(mydata.errors);
                    }

                },
                error: function (mydata) {
                    console.log(myData);
                    alert("error"); alert(mydata);
                },
            });

            return false;
        }

    }

    function setValidation() {

        var validator=   $('#createForm').validate({

            rules:{
                DiagnosisDescription: {
                    required: true
                },
                
                DiagnosisEffectiveStartDate: {
                    requierd:true
                },
                DiagnosisEffectiveEndDate: {
                    requierd: true
                },
                DiagnosisStatus: {
                    required: function (element) {
                        return $('#DiagnosisStatus').val() === '';
                    }
                }
            },
            messages: {
                DiagnosisDescription: {
                    required: "Description Required"
                },
               
                DiagnosisEffectiveStartDate: {
                    requierd: "Start Date Required"
                },
                DiagnosisEffectiveEndDate: {
                    requierd: "End Date Required"
                },
                DiagnosisStatus: {
                    required: "Status Required"
                }
            },
            errorPlacement:function(error,element){
                $(element)
                           .closest("form")
                               .find("label[for='" + element.attr("id") + "']")
                                   .append(error);
            },
            errorElement: "span",
            //submitHandler: function (form) {
            //    if (validator.form()) {
            //        var model = DiagnosisObject.objectModel();
            //        DiagnosisObject.create(model);
            //        return false;
            //    }
            //}
        })

    }

    function save() {
        
        var model = DiagnosisObject.objectModel();
        DiagnosisObject.create(model);

    }


    $('#DiagnosisEffectiveStartDate').datepicker();
    $('#DiagnosisEffectiveEndDate').datepicker();




    $(document).ready(function () {

        setValidation();

        $('#close').on('click', function close() {

            window.parent.$('.createWrapper').hide();
            //window.parent.dialog.dialog("close")
            window.parent.getTable(window.parent.currentEntity);
            
            return false;
        });
    });
</script>
